---
# tasks file for dev
- name: Install docker prerequisities apt 
  become: true
  apt:
    name:
      - ca-certificates 
      - curl
      - git  
    state: present
    update_cache: yes
    cache_valid_time: 600 
  tags:
    - dev 

- name: Create keyrings directory
  become: true 
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'
  tags:
   - dev  

- name: Add Docker's official GPG key
  become: true
  get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/keyrings/docker.asc
    mode: '0644'  # Setting permissions for the key file
  tags:
    - packages

# - name: Add Docker's official GPG key
#   become: true
#   apt_get:
#     url: https://download.docker.com/linux/ubuntu/gpg
#     keyring: /etc/apt/keyrings/docker.asc
#     state: present
#   tags:
#     - file 

# - name: Set correct rights 
#   become: true 
#   file: 
#     path: /etc/apt/keyrings/docker.asc
#     mode: a+r 
#   tags: 
#     - dev 


# - name: Add Docker repository to Apt sources
#   become: true 
#   lineinfile:
#     path: /etc/apt/sources.list.d/docker.list
#     line: "deb [arch={{ ansible_architecture }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution | lower }} stable"
#     state: present
#   tags:
#     - dev 

# - name: Add Docker repository to Apt sources
#   become: true 
#   shell: echo "deb [arch={{ ansible_architecture }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release | lower }} stable" | \
#     tee /etc/apt/sources.list.d/docker.list > /dev/null
#   tags: 
#     - dev 

# - name: Add Docker repository to Apt sources
#   become: true 
#   shell: echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo $VERSION_CODENAME) stable" | \
#     tee /etc/apt/sources.list.d/docker.list > /dev/null
#   tags: 
#     - dev 

# alebo takto
- name: Get OS arch 
  command: dpkg --print-architecture 
  register: arch_out 

- name: Add Docker repository to Apt sources 
  become: true 
  apt_repository: 
    repo: "deb [arch={{ arch_out.stdout }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    filename: docker
    state: present 
  tags: 
    - dev 

# sudo apt-get update && sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
- name: Install all packages
  become: true
  apt:
    name: 
      - docker-ce 
      - docker-ce-cli 
      - containerd.io 
      - docker-buildx-plugin 
      - docker-compose-plugin
    state: present
    update_cache: yes
  notify: start docker service #pridanie handler aby sa docker spustil
  tags:
    - packages

- name: Ensure group "docker" exists 
  become: true 
  ansible.builtin.group: 
    name: docker 
    state: present 

- name: Add user "" to docker group 
  become: true 
  ansible.builtin.user: 
    name: "{{ item }}"
    groups: docker 
    append: yes 
  loop: "{{ docker_users }}"

# - name: Check docker 
#   become: true 
#   shell: docker run hello-world
#   register: docker_check_out
#   tags:
#     - packages
#     - debug

# - name: Display docker check 
#   debug:
#     var: docker_check_out
#   tags:
#     - packages
#     - debug
